// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Dealer Model
model Dealer {
  id           Int           @id @default(autoincrement())
  name         String
  contact      String
  address      String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

// Item Model
model Item {
  id           Int               @id @default(autoincrement())
  name         String
  unitPrice    Float
  stock        Stock?
  transactions TransactionItem[]
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

// Stock Model
model Stock {
  id        Int      @id @default(autoincrement())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int      @unique
  quantity  Float
  updatedAt DateTime @updatedAt
}

// Transaction Model
model Transaction {
  id           Int               @id @default(autoincrement())
  dealer       Dealer            @relation(fields: [dealerId], references: [id])
  dealerId     Int
  user         User              @relation(fields: [userId], references: [id])
  userId       Int
  items        TransactionItem[]
  totalAmount  Float
  paidAmount   Float
  stockUpdated Boolean           @default(false)
  date         DateTime          @default(now())
  createdAt    DateTime          @default(now())
}

model TransactionItem {
id            Int         @id @default(autoincrement())
  item          Item        @relation(fields: [itemId], references: [id])
  itemId        Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  quantity      Float
  price         Float
}

// User Model
model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         Role
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum Role {
  ADMIN
  STAFF
}
  